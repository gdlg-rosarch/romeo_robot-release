# README to use with Romeo

This ROS package enables communication with cameras via NAOqi. 
It can be used either from a computer that connects to the robot via network or locally on the robot itself.

## I. TO USE FROM A REMOTE COMPUTER

### I.1 Compile the package

Suppose that you alreadly have a ros workspace and know how to compile a ros package. In order to compile nao_camera, you need to add the path to naoqiSDK-python to the PYTHONPATH. Then, inside your catkin workspace, you just need to run the command 'catkin_make' to compile nao_camera.

### I.2 Run nao_camera

nao_camera needs NAO_IP in order to get images from Romeo's cameras. So before running nao_camera, please set NAO_IP to your robot's ip.

If your catkin workspace is correctly sourced, you can run the following command without error:

```
roslaunch nao_camera camera_dynamic_reconfigure_python.launch
rosrun rqt_reconfigure rqt_reconfigure
```

In the graphical interface of rqt_reconfigure, you can choose the source and the encoding of the image you want to retrieve. It is recommended to enable *Use ros time*.

Or, if you want to retrieve the depth image from Romeo's depth camera, you can directly run:
```
roslaunch nao_camera camera_depth_python.launch
```

Now you can use image_view or rviz to visualize the image(s) that publishes by nao_camera. Beware to choose the right frame topic in your rviz's Global Options. To know what frame topic to set, just run topic echo /nao_camera/image_raw/header to see what the value of frame_id is.

## II. TO USE ON YOUR ROMEO

### II.1 Prepare nao_camera 

In order to use it on your robot, you need to compile the package in a naoqi environment. Compiling any ROS package in naoqi is quite simple, as explained [here!](http://wiki.ros.org/nao/Installation/compileFromVirtualNao):

### II.2 Run nao_camera

Once you have your nao_camera compiled and installed on your robot, you can simply run 
```
roslaunch nao_camera camera_dynamic_reconfigure_python.launch
```

to choose to camera you want:
```
rosrun dynamic_reconfigure dynparam set /nao_camera source <0: left camera, 1: right camera, 2: depth camera>
```

to choose the resolution you want:
```
rosrun dynamic_reconfigure dynparam set /nao_camera resolution <0: 160x120, 1: 320x240, 2: 640x480>
```

to add/delete ros time for the image:
```
rosrun dynamic_reconfigure dynparam set /nao_camera use_ros_time <True | False>
```

to set color space for the image:
```
rosrun dynamic_reconfigure dynparam set /nao_camera color_space <between 0 and 17 accoding to config/NaoCamera.cfg>
```
or 
```
roslaunch nao_camera camera_depth_python.launch
```

Now you can use image_view to visualize the image(s) that publishes by nao_camera. From remote computer, you can also run image_view to view images from nao_camera, you just need to export ROS_MASTER_URI, ROS_IP, and ROS_HOSTNAME with the right information.
