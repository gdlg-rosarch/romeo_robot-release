<!-- -*- mode: XML -*- -->
<launch>
  <env name="PYTHONPATH" value="$(env PYTHONPATH)" /> 

  <arg name="nao_ip" default="$(optenv NAO_IP 127.0.0.1)" />
  <arg name="nao_port" default="$(optenv NAO_PORT 9559)" />
  <node pkg="nao_camera" type="cameras.py" name="nao_camera" required="true" args="--pip=$(arg nao_ip) --pport=$(arg nao_port)" output="screen">
     <param name="calibration_file_bottom" type="string" value="file://$(find nao_camera)/share/nao_camera_bottom_640x480.yaml"/>
     <param name="calibration_file_top" type="string" value="file://$(find nao_camera)/share/nao_camera_top_640x480.yaml"/>
     <param name="resolution" type="int" value="2" /> <!--QQVGA=0, QVGA=1, VGA=2 -->
     <param name="color_space" type="int" value="13" /> <!-- 9 = YUV422, 11 = RGB, 13 = BGR -->
     <param name="fps" type="int" value="30" />
     <param name="camera_switch" type="int" value="2" /> --> <!-- 0 = top, 1 = bottom -->
  </node>

    <!-- Also bring up image_proc for it, to get image_rect topic.
       In Electric, assuming camera namespace /my_camera: -->
  <node ns="nao_camera/rgb" name="external_rgb_proc" pkg="image_proc" type="image_proc" />

  <!-- Also bring up image_proc for it, to get image_rect topic.
       In Electric, assuming camera namespace /my_camera: -->
  <node ns="nao_camera/depth" name="external_depth_proc" pkg="image_proc" type="image_proc" />

  <!-- In Fuerte, you can instead load image_proc as nodelets into the
       OpenNI nodelet manager: -->
  <include ns="nao_camera/rgb" file="$(find image_proc)/launch/image_proc.launch">
    <arg name="manager" value="/camera_nodelet_manager" />
  </include>

  <!-- Extrinsic transform publisher -->
  <include file="$(find camera_pose_calibration)/blocks/calibration_tf_publisher.launch">
    <arg name="cache_file" value="/home/hdang/built_for_NAO/conf/kinect_extrinsics_cache.bag" />
  </include>

</launch>
